{"version":3,"sources":["logo.svg","components/Header/index.js","components/Header/Header.jsx","components/Message/index.js","components/Message/Message.jsx","components/ChatHistory/index.js","components/ChatHistory/ChatHistory.jsx","components/ChatInput/ChatInput.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Message","props","useState","JSON","parse","message","body","ChatHistory","messages","DisplayMessages","map","msg","index","data","ChatInput","onKeyDown","send","placeholder","App","msgList","setMsgList","callBack","push","console","log","useEffect","connect","event","keyCode","sendMsg","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","socket","WebSocket","cb","onopen","onmessage","onclose","onerror","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+WAAe,I,kBCEAA,ECCA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,mDACA,oDACA,6DCNGC,G,MCCC,SAACC,GACb,MAA8BC,mBAASC,KAAKC,MAAMH,EAAMI,UAAxD,mBAAOA,EAAP,UACA,OACI,qBAAKN,UAAU,UAAf,SACKM,EAAQC,SCLNC,G,MCEK,SAACN,GACjB,IAAKO,EAAYP,EAAZO,SAEDC,EAAkB,kBAAMD,EAASE,KAAI,SAACC,EAAKC,GAC5C,OAAO,cAAC,EAAD,CAASP,QAASM,EAAIE,WAGhC,OACI,sBAAKd,UAAU,cAAf,UACI,8CACA,cAACU,EAAD,SCHGK,G,MARG,SAACb,GACf,OACI,qBAAKF,UAAU,YAAf,SACI,uBAAOgB,UAAWd,EAAMe,KAAMC,YAAY,4CC8BvCC,MA5Bf,SAAajB,GACX,MAA8BC,mBAAS,IAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACIC,EAAW,SAACV,GACdQ,EAAQG,KAAKX,GACbS,EAAW,YAAID,IACfI,QAAQC,IAAIL,IAcd,OAXAM,qBAAU,WACRC,EAAQL,MAWR,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaS,SAAUW,IACvB,cAAC,EAAD,CAAWH,KAXJ,SAACW,GACY,KAAlBA,EAAMC,UACRC,EAAQF,EAAMG,OAAOC,OACrBJ,EAAMG,OAAOC,MAAQ,WCXZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAVQ,EAAS,IAAIC,UAAU,8CAEvBhB,EAAU,SAACiB,GACbpB,QAAQC,IAAI,8BAEZiB,EAAOG,OAAS,WACdrB,QAAQC,IAAI,2BAGdiB,EAAOI,UAAY,SAAClC,GAClBgC,EAAGhC,IAGL8B,EAAOK,QAAU,SAACnB,GAChBJ,QAAQC,IAAI,6BAA8BG,IAG5Cc,EAAOM,QAAU,SAACC,GAChBzB,QAAQC,IAAI,iBAAkBwB,KAI9BnB,EAAU,SAAClB,GACbY,QAAQC,IAAI,gBAAiBb,GAC7B8B,EAAOzB,KAAKL,IAKdsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.999a4c5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Header from \"./Header.jsx\"\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h2>Realtime Chat App</h2>\r\n            <h6>Developed by Rajat</h6>\r\n            <h6>Powered by React and GO</h6>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import Message from './Message';\r\n\r\nexport default Message;\r\n","import React, { useState } from 'react';\r\nimport './Message.scss';\r\n\r\nconst Message = (props) => {\r\n    const [message, setMessage] = useState(JSON.parse(props.message));\r\n    return (\r\n        <div className=\"Message\">\r\n            {message.body}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import ChatHistory from \"./ChatHistory\";\r\n\r\nexport default ChatHistory;","import React from \"react\";\r\nimport Message from \"../Message\";\r\nimport \"./ChatHistory.scss\";\r\n\r\nconst ChatHistory = (props) => {\r\n    let {messages} = props;\r\n\r\n    let DisplayMessages = () => messages.map((msg, index) => {\r\n       return <Message message={msg.data} />\r\n    });\r\n\r\n    return (\r\n        <div className=\"ChatHistory\">\r\n            <h2>Chat History</h2>\r\n            <DisplayMessages />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatHistory;","import React from 'react';\r\nimport './ChatInput.scss';\r\n\r\nconst ChatInput = (props) => {\r\n    return (\r\n        <div className=\"ChatInput\">\r\n            <input onKeyDown={props.send} placeholder=\"Type a message... Hit Enter to Send\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatInput;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { connect, sendMsg } from '.';\r\nimport Header from './components/Header';\r\nimport ChatHistory from './components/ChatHistory';\r\nimport { useState, useEffect } from 'react';\r\nimport ChatInput from './components/ChatInput/ChatInput';\r\n\r\nfunction App(props) {\r\n  const [msgList, setMsgList] = useState([]);\r\n  let callBack = (msg) => {\r\n    msgList.push(msg);\r\n    setMsgList([...msgList]);\r\n    console.log(msgList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    connect(callBack);\r\n  })\r\n\r\n  let send = (event) => {\r\n    if (event.keyCode === 13) {\r\n      sendMsg(event.target.value);\r\n      event.target.value = \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <ChatHistory messages={msgList}/>\r\n      <ChatInput send={send}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// let socket = new WebSocket(\"ws://localhost:8000/ws\");\r\nlet socket = new WebSocket(\"ws://shrouded-ridge-25642.herokuapp.com/ws\");\r\n\r\nlet connect = (cb) => {\r\n  console.log(\"Attempting Connection ... \");\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"Successfully Connected\");\r\n  };\r\n\r\n  socket.onmessage = (msg) => {\r\n    cb(msg);\r\n  };\r\n\r\n  socket.onclose = (event) => {\r\n    console.log(\"Socket Closed Connection: \", event);\r\n  }\r\n\r\n  socket.onerror = (error) => {\r\n    console.log(\"Socket Error: \", error);\r\n  };\r\n};\r\n\r\nlet sendMsg = (msg) => {\r\n  console.log(\"sending msg: \", msg);\r\n  socket.send(msg);\r\n}\r\n\r\nexport { connect, sendMsg };\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}